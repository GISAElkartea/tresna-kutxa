# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-03 16:06
from __future__ import unicode_literals

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import tk.material.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('published', models.DateTimeField(blank=True, null=True, verbose_name='published on')),
                ('approved', models.BooleanField(default=False, verbose_name='is approved')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='contact email')),
            ],
            options={
                'verbose_name_plural': 'Approvals',
                'verbose_name': 'Approval',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='izena')),
                ('name_eu', models.CharField(max_length=512, null=True, verbose_name='izena')),
                ('name_es', models.CharField(max_length=512, null=True, verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Goals',
                'verbose_name': 'Goal',
            },
        ),
        migrations.CreateModel(
            name='GroupFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='izena')),
                ('name_eu', models.CharField(max_length=512, null=True, verbose_name='izena')),
                ('name_es', models.CharField(max_length=512, null=True, verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Group features',
                'verbose_name': 'Group feature',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(max_length=16, primary_key=True, serialize=False, verbose_name='code')),
                ('name', models.CharField(max_length=512, verbose_name='izena')),
                ('name_eu', models.CharField(max_length=512, null=True, verbose_name='izena')),
                ('name_es', models.CharField(max_length=512, null=True, verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Language',
                'verbose_name': 'Language',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='izena')),
                ('name_eu', models.CharField(max_length=512, null=True, verbose_name='izena')),
                ('name_es', models.CharField(max_length=512, null=True, verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'verbose_name': 'Location',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, verbose_name='title')),
                ('title_eu', models.CharField(max_length=512, null=True, verbose_name='title')),
                ('title_es', models.CharField(max_length=512, null=True, verbose_name='title')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('brief', models.TextField(blank=True, verbose_name='brief')),
                ('brief_eu', models.TextField(blank=True, null=True, verbose_name='brief')),
                ('brief_es', models.TextField(blank=True, null=True, verbose_name='brief')),
                ('author', models.CharField(blank=True, max_length=512, verbose_name='author')),
            ],
            options={
                'verbose_name_plural': 'Materials',
                'verbose_name': 'Material',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='izena')),
                ('name_eu', models.CharField(max_length=512, null=True, verbose_name='izena')),
                ('name_es', models.CharField(max_length=512, null=True, verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
                'verbose_name': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('min_people', models.PositiveSmallIntegerField(default=2, verbose_name='minimum number of people')),
                ('max_people', models.PositiveSmallIntegerField(default=30, verbose_name='maximum number of people')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('notes_eu', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('notes_es', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('attachment', models.FileField(blank=True, upload_to='material/activities/', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
                ('goals', models.ManyToManyField(to='material.Goal', verbose_name='goals')),
                ('group_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.GroupFeature', verbose_name='group feature')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.Location', verbose_name='location')),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'verbose_name': 'Activity',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('url', models.URLField(verbose_name='URL')),
            ],
            options={
                'verbose_name_plural': 'Links',
                'verbose_name': 'Link',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('pages', models.PositiveIntegerField(verbose_name='pages')),
                ('year', models.PositiveIntegerField(validators=[tk.material.models.validate_year], verbose_name='year')),
                ('attachment', models.FileField(blank=True, upload_to='material/readings/', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='material.Language', verbose_name='language')),
            ],
            options={
                'verbose_name_plural': 'Readings',
                'verbose_name': 'Reading',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('year', models.PositiveIntegerField(validators=[tk.material.models.validate_year], verbose_name='year')),
                ('attachment', models.FileField(blank=True, upload_to='material/videos', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
                ('audios', models.ManyToManyField(blank=True, related_name='video_audio', to='material.Language', verbose_name='audio languages')),
                ('subtitles', models.ManyToManyField(blank=True, related_name='video_subtitle', to='material.Language', verbose_name='subtitle languages')),
            ],
            options={
                'verbose_name_plural': 'Videos',
                'verbose_name': 'Video',
            },
            bases=('material.material',),
        ),
        migrations.AddField(
            model_name='material',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='material.Subject', verbose_name='subject'),
        ),
        migrations.AddField(
            model_name='approval',
            name='material',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='material.Material'),
        ),
    ]
