# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-03 13:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import localized_fields.fields.field
import localized_fields.fields.uniqueslug_field
import localized_fields.mixins
import tk.material.fields
import tk.material.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('approved', models.BooleanField(default=False, verbose_name='is approved')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='contact email')),
            ],
            options={
                'verbose_name_plural': 'Approvals',
                'verbose_name': 'Approval',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', localized_fields.fields.field.LocalizedField(max_length=512, required=[], uniqueness=[], verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Goals',
                'verbose_name': 'Goal',
            },
        ),
        migrations.CreateModel(
            name='GroupFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', localized_fields.fields.field.LocalizedField(max_length=512, required=[], uniqueness=[], verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Group features',
                'verbose_name': 'Group feature',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', localized_fields.fields.field.LocalizedField(max_length=512, required=[], uniqueness=[], verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'verbose_name': 'Location',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', localized_fields.fields.field.LocalizedField(max_length=512, required=[], uniqueness=[], verbose_name='title')),
                ('slug', localized_fields.fields.uniqueslug_field.LocalizedUniqueSlugField(include_time=False, populate_from='title', required=[], uniqueness=['eu', 'es'])),
                ('brief', tk.material.fields.LocalizedMarkdownxField(blank=True, required=[], uniqueness=[], verbose_name='brief')),
                ('author', models.CharField(blank=True, max_length=512, verbose_name='author')),
            ],
            options={
                'verbose_name_plural': 'Materials',
                'verbose_name': 'Material',
            },
            bases=(localized_fields.mixins.AtomicSlugRetryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', localized_fields.fields.field.LocalizedField(max_length=512, required=[], uniqueness=[], verbose_name='izena')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
                'verbose_name': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('min_people', models.PositiveSmallIntegerField(default=2, verbose_name='minimum number of people')),
                ('max_people', models.PositiveSmallIntegerField(default=30, verbose_name='maximum number of people')),
                ('notes', localized_fields.fields.field.LocalizedField(blank=True, required=[], uniqueness=[], verbose_name='notes')),
                ('attachment', models.FileField(blank=True, upload_to='material/activities/', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
                ('goals', models.ManyToManyField(to='material.Goal', verbose_name='goals')),
                ('group_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.GroupFeature', verbose_name='group feature')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.Location', verbose_name='location')),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'verbose_name': 'Activity',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('url', models.URLField(verbose_name='URL')),
            ],
            options={
                'verbose_name_plural': 'Links',
                'verbose_name': 'Link',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('pages', models.PositiveIntegerField(verbose_name='pages')),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[tk.material.models.validate_year], verbose_name='year')),
                ('languages', tk.material.fields.LanguageField(base_field=models.CharField(max_length=7), size=None, verbose_name='languages')),
                ('attachment', models.FileField(blank=True, upload_to='material/readings/', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
            ],
            options={
                'verbose_name_plural': 'Readings',
                'verbose_name': 'Reading',
            },
            bases=('material.material',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.Material')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[tk.material.models.validate_year], verbose_name='year')),
                ('audios', tk.material.fields.LanguageField(base_field=models.CharField(max_length=7), blank=True, size=None, verbose_name='audio languages')),
                ('subtitles', tk.material.fields.LanguageField(base_field=models.CharField(max_length=7), blank=True, size=None, verbose_name='subtitle languages')),
                ('attachment', models.FileField(blank=True, upload_to='material/videos', verbose_name='attachment')),
                ('url', models.URLField(blank=True, help_text='Link the material if its copyright does not allow sharing it.', verbose_name='URL')),
            ],
            options={
                'verbose_name_plural': 'Videos',
                'verbose_name': 'Video',
            },
            bases=('material.material',),
        ),
        migrations.AddField(
            model_name='material',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='material.Subject', verbose_name='subject'),
        ),
        migrations.AddField(
            model_name='approval',
            name='material',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='material.Material'),
        ),
    ]
